WHAT IS REACT?

React is a free and open-source javascript
library specifically designed for building
user interfces.

-> Developed by facebook in 2011:

React is the most popular, powerful front-end
library developed and sponsored by 
facebool

-> Use components model:

Component is a peace of the ui that has it's
own logic and appearance. A component can
be small as a a button or large as entire page.

-> Build moduler apps

-> Learn once, write anywhere:

can build mobile (ract native) and dekstop applications (react dekstop), and also vertual reality (react 360 ).


WHAT ARE COMPONENTS?

Components are independent and reusable bits of code. They serve the same purpose as js functions, but work in isolation and return html or jsx to be precise.


WHAT IS JSX?

JSX allows us to write HTML in react. JSX makes it easier to write and add HTML in react.

RULES:

-> JSX must return a single parent element.

-> JSX must be properly closed.

-> JSX attribules are written in camelCase (eg. className instead of class).


EXPRESSION IN JSX

With JSX you can write expresion inside curly 
braces. The expressions can be a React variable or 
property or any other valid JavaScript expression. 
JSX will execute the expression and return the result.


LISTS

In react, you will render lists with some type 
of loop. The javascript map() array method
is generally the preferred method.


PROPS

-> Properties are arguments passed
into React components.

-> Properties allows us to pass data
from parent component to a child 
component.

-> Properties are passed to components
via HTML attributes.


CONDITIONAL RENDERING

Conditional rendering allows us to dynamically display
diferent UI components or content based on specific conditions. This
enables us to create more interactivr and responsive user
experiences.


STATE

State is way to store and manage data that can change over
time and affects how the component renders. We define state 
using a useState hook, which allows you to set an initial 
value and provides a way to update that state.


HOOKS

Hooks are a new addition in react 16.8
They let you use state and other react features
without writing a class.


useState() HOOK

useState hook allows us to track state in a 
functional component. State generally refers
to data or properties that need to be
traking in an application.


WHAT IS REACT PORTAL?

Portal is a feature that allows you to render a child 
component into a DOM node that exists outside the 
hierarchy of the parent component. This can be usefull for 
scenerios like modals, tooltips or dropdown where you 
want to break out of the usual parent child structure and 
render in a different part of DOM.


useEffect() HOOK

useEffect hook allows you to perform side effects in 
your components. Some example of side effects 
are: fetching data, directly updating the DOM etc.

We setup useEffect hook to run some coee when

-> component renders for the first time

-> whenever it rerenders

-> some data in our component changed.


 CONTEXT API

 Context api is a feature that allows you to manage and 
 share state across your componet tree withount having to 
 pass props down manually at every level. It's usefull for 
 scenarios where you need to share data or functions 
 across many components, espacially when these 
 components are deeply nested.


 useContext() HOOK

 useContext hook allows us to access the context values
 provided by a context object directly within a functional
 component. Context provides a way to pass data through
 the component tree without having to pass props down
 manually at every level.


 useReducer() HOOK

 useReducer is a hook that is similar to useState, 
 but it is designed for more complex state objects 
 or state transitions that involves multiple sub-
 values. It allows you to manage state in a 
 functional, Immutable way.


 useRef() HOOK

 useRef hook provides a way to acess and 
 interact with DOM elements or to persist values
 across renders without cousing a re-render.